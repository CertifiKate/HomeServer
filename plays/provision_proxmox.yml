---
# PVE Requirements:
# - SSH access to proxmox node as ansible_user with password-less sudo perms
# - SSH access to proxmox node to use as jump host to LXC containers (recommended with no permissions to other commands) (TODO: Automate)
# - Download template on host(s). (TODO: Automate)

- name: Setup Proxmox Servers
  hosts: proxmox_servers
  gather_facts: true
  become: true
  tasks:
  - name:
    block:
    # Note: Changes to networking after cts have been setup will require the CTs to be rebooted
    - name: Setup proxmox networking
      copy:
        dest: /etc/network/interfaces
        content: |
          auto lo
          iface lo inet loopback

          auto {{ ethernet_interface }}
          iface {{ ethernet_interface }} inet static
            address {{ ansible_host }}/24
            gateway {{ gateway }}

          {% if ethernet_secondary_interface is defined %}
          auto {{ ethernet_secondary_interface }}
          iface {{ ethernet_secondary_interface }} inet manual

          auto vmbr2
          iface vmbr2 inet static
            bridge-ports {{ ethernet_secondary_interface }}
            bridge-stp off
            bridge-fd 0
            bridge-vlan-aware yes
            bridge-vids 2-4094

          {% endif%}
      register: proxmoxNetwork
    
    - block:
      - name: Reload networking
        command:
          cmd: ifreload -a

      - name: Wait for Proxmox to come back online
        wait_for:
          port: 22
          host: '{{ ansible_ssh_host }}'
          timeout: 30
      when: proxmoxNetwork.changed

  - name: Setup SSH jump box user
    block:
    - name: Create jump box user
      user:
        name: ssh_jump_host
        comment: Jump host user with no permissions except ssh tunneling
        shell: /bin/false

    - name: Add SSH Key
      authorized_key:
        user: ssh_jump_host
        key: "{{ pve_ansible_pubkey }}"
        state: present

    - name: Secure SSH server side
      copy:
        dest: /etc/ssh/sshd_config.d/jump_user.conf
        content: |
          Match User ssh_jump_host
            PermitTTY no
            X11Forwarding no
            PermitTunnel no
            GatewayPorts no
            ForceCommand /usr/sbin/nologin

  - name: Setup apt cache
    block:
    - name: Install apt-cacher-ng
      apt:
        pkg: 
        - 'apt-cacher-ng'
        state: latest
        update_cache: yes

    - name: Start apt-cacher service
      service:
        name: apt-cacher-ng
        state: started
        enabled: yes

    - name: Pass through HTTPS repos
      lineinfile:
        path: /etc/apt-cacher-ng/acng.conf
        line: 'PassThroughPattern: ^(.*):443$'
      notify: restart-apt-cacher
  
  handlers:
    - name: Restart apt-cacher-ng service
      ansible.builtin.service:
        name: apt-cacher-ng
        state: restarted
      listen: restart-apt-cacher

- name: Provision Proxmox LXC Containers
  hosts: pve_lxd_containers
  connection: local
  gather_facts: false
  tasks:
  - name: 
    block:
    # - name: Get Template
    #   run_once: true
    #   connection: ssh
    #   delegate_to: '{{ node }}'
    #   command:
    #     cmd: 'pveam download local {{ ostemplate }}'

    - name: Create LXC
      include_role:
        name: create-proxmox-lxc

    - name: Start LXC
      community.general.proxmox:
        vmid: '{{ vmid }}'
        api_user: '{{ vault_pve_api_user }}'
        api_password: '{{ vault_pve_api_password }}'
        api_host: '{{ hostvars[node].ansible_host }}'
        state: started
      register: startLxcTask

    - name: Pause for 10s to let LXC start
      wait_for:
        host: '{{ ansible_host }}'
        port: 22
        timeout: 10
      when: startLxcTask.changed

    - name:
      import_role:
        name: init-host

- name: Setup Jellyfin hardware acceleration
  hosts: proxmox_servers
  become: true
  tasks:
    - name: Setup Jellyfin config
      ansible.builtin.blockinfile:
        path: "/etc/pve/lxc/{{ hostvars['media-01'].vmid }}.conf"
        block: |
          lxc.cgroup2.devices.allow: c 226:0 rwm
          lxc.cgroup2.devices.allow: c 226:128 rwm
          lxc.mount.entry: /dev/dri/card0 dev/dri/card0 none bind,optional,create=file
          lxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create=file

    - name: Restart Jellyfin
      become: false
      connection: local
      community.general.proxmox:
        vmid: "{{ hostvars['media-01'].vmid }}"
        api_user: '{{ vault_pve_api_user }}'
        api_password: '{{ vault_pve_api_password }}'
        api_host: '{{ ansible_host }}'
        state: restarted