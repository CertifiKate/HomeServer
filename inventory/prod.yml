all:
  children:
    # ==== Physical/Cloud Servers ===========
    proxmox_servers:
      hosts:
        microwave:
          ansible_host: 192.168.10.50
          gateway: 192.168.10.1
          ethernet_interface: enp0s31f6
          project_root_directory: "/services"
          project_directory: "{{ project_root_directory }}/lxd"
          # Use direct disk rather than MergerFS endpoint just incase that has failed
          local_borg_repo_dir: "/mnt/disk1/Backups/"
          local_borg_repo_services: "{{ local_borg_repo_dir }}services-local.borg"
          # Use MergerFS storage pool
          media_directory: "/mnt/storage/Media"
          storage_directory: "/mnt/storage/Storage"
          scripts_directory: "/scripts"
          host_uses_snapraid: true
    physical_servers:
      hosts:
        microwave:
        griddle:
          ansible_host: 192.168.88.225
          project_root_directory: "/services"
          project_directory: "{{ project_root_directory }}/docker"
          no_use_proxy: true
          uses_docker: true
          roles:
            - setup-home
    cloud_servers:
      hosts:
        cloud-01:
          ansible_host: "{{ cloud01_ip }}"
          ansible_user: "ansible"
          project_root_directory: "/services"
          project_directory: "{{ project_root_directory }}/apps"
          wireguard_no_frontend: true
          wireguard_port: "{{ cloud01_wireguard_port }}"

    # =================================

    # ==== LXD Containers =============
    pve_lxd_containers:
      hosts:
      # == Organised by function ======
        # Each function has different IP blocks

        # === Core (10-29) ============

        # Internal-only DNS
        dns-02:
          vmid: 116
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          uses_docker: false
          memory: 512
          roles:
            - setup-dnsmasq

        prox-01:
          vmid: 115
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 1024
          custom_networks:
            net1: "name=eth1,ip=10.0.101.3/24,bridge=vmbr101,gw=10.0.101.1/24"
          roles:
            - setup-proxy-traefik

        auth-01:
          vmid: 112
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 2048
          roles:
            - setup-auth

        sec-01:
          vmid: 114
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'

        gate-01:
          vmid: 113
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 512
          roles:
            - setup-gateway

        # =============================
        # === Utilty (30-49) ==========
        util-01:
          vmid: 130
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 2048
          roles:
          - setup-monitoring
          - setup-cloudflare-ddns
          - setup-vikunja
          - setup-recipes

        code-01:
          vmid: 135
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 2048
          custom_networks:
            net1: "name=eth1,ip=10.0.101.3/24,bridge=vmbr101,gw=10.0.101.1/24"
          roles:
          - setup-coder

        stor-01:
          vmid: 140
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 2048
          custom_mounts:
            mp1: 
              container_path: "/data"
              host_path: "{{ hostvars['microwave'].storage_directory }}"
          roles:
          - setup-storage

        home-01:
          vmid: 141
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          memory: 1024
          custom_mounts:
            mp1: 
              container_path: "/dev/ttyACM0"
              host_path: "/dev/ttyACM0"
          custom_networks:
            net1: "name=eth1,ip=192.168.200.2/24,bridge=vmbr2,gw=192.168.200.1/24"
          roles:
          - setup-home

        # =============================
        # === Media (50-59) ===========
        media-01:
          vmid: 150
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          media_directory: "/data"
          memory: 4096
          uses_docker: false
          custom_mounts:
            mp1: 
              container_path: "/data"
              host_path: "{{ hostvars['microwave'].media_directory }}"
          roles:
            - setup-jellyfin

        media-02:
          vmid: 151
          node: 'microwave'
          ostemplate: 'debian-11-standard_11.3-1_amd64.tar.zst'
          media_directory: "/data"
          memory: 4096
          custom_mounts:
            mp1: 
              container_path: "/data"
              host_path: "{{ hostvars['microwave'].media_directory }}"
          roles:
            - setup-media-dl
            - setup-torrent
            - setup-library

    proxy:
      hosts:
        prox-01:
          # proxy_dev_mode: true
          traefikServices:
            # Core
            - name: authentik
              host: 'auth.{{ project_tld }}'
              destScheme: https
              destHost: auth-01
              destPort: '9443'
              proxyAuth: false
            
            - name: wireguard
              host: 'wgui.{{ project_tld }}'
              destScheme: http
              destHost: gate-01
              destPort: '51821'

            # Util
            - name: grafana
              host: 'monitor.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '3000'
              proxyAuth: false

            - name: influxdb
              host: 'influxdb.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '8086'

            - name: coder
              host: 'code.{{ project_tld }}'
              destScheme: http
              destHost: code-01
              destPort: '7080'
              proxyAuth: false

            - name: nextcloud
              host: 'storage.{{ project_tld }}'
              destScheme: https
              destHost: 'stor-01'
              destPort: '443'
              proxyAuth: false

            - name: vikunja-api
              rule: 'Host(`vikunja.{{ project_tld }}`) && (PathPrefix(`/api/v1`) || PathPrefix(`/dav/`) || PathPrefix(`/.well-known/`))'
              destScheme: http
              destHost: util-01
              destPort: '3456'
              proxyAuth: false

            - name: vikunja-frontend
              host: 'vikunja.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '3457'
              proxyAuth: false

            - name: gotify
              host: 'gotify.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '3300'
              proxyAuth: false

            - name: tandoor
              host: 'recipes.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '4001'
              proxyAuth: false

            # Media
            - name: jellyfin
              host: 'media.{{ project_tld }}'
              destScheme: http
              destHost: media-01
              destPort: '8096'
              proxyAuth: false

            # TODO: Add more to authentik
            - name: jellyseer
              host: 'jellyseer.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '5055'
              proxyAuth: false

            - name: sonarr
              host: 'sonarr.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '8989'

            - name: radarr
              host: 'radarr.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '7878'

            - name: qbittorrent
              host: 'torrent.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '8080'

            - name: prowlarr
              host: 'prowlarr.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '9696'

            - name: calibre-web
              host: 'library.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '8083'
              proxyAuth: false

            # Home Assistant
            - name: home-assistant
              host: 'home.{{ project_tld }}'
              destScheme: http
              destHost: home-01
              destPort: '8743'
              proxyAuth: false

            - name: esp-home
              host: 'esp.{{ project_tld }}'
              destScheme: http
              destHost: home-01
              destPort: '6052'

    crowdsec_agent:
      hosts:
        sec-01:
          crowdsec_lapi: true
        auth-01: 
          crowdsec_agent_type: authentik
          crowdsec_file_mounts:
            - "/var/run/docker.sock:/var/run/docker.sock"
          crowdsec_agent_lapi_url: "http://{{ hostvars[\"sec-01\"].ansible_host }}:8080"
        prox-01:
          crowdsec_agent_type: traefik
          crowdsec_collections: crowdsecurity/traefik
          crowdsec_file_mounts:
            - "{{ project_directory }}/traefik/data/:/var/log/traefik/"
          crowdsec_agent_lapi_url: "http://{{ hostvars[\"sec-01\"].ansible_host }}:8080"
    crowdsec_bouncer:
      hosts:
        microwave:
          # Iptables (all ports, incl. ssh)
          # May mean we don't need to do anything on prox-01 or gate-01?
          crowdsec_bouncer_type: iptables
          crowdsec_bouncer_lapi_url: "http://{{ hostvars[\"sec-01\"].ansible_host }}:8080"
        # prox-01:
        #   # Nginx/Iptables
        # gate-01:
        #   # Iptables/Wireguard
        # sec-01:
          # Cloudflared

    # =============================
    # === Meta-groups =============
    media:
      hosts:
        media-01:
        media-02:
    utility:
      hosts:
        util-01:
        home-01:
        code-01:
        stor-01:
    core:
      hosts:
        dns-02:
        prox-01:
        auth-01:
        sec-01:
        gate-01: