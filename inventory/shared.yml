# Used to define the configs of the LXC containers
# Dev and Prod should always have the same LXC configs, but the host and 
# We create these on different bare metal servers

all:
  children:
    # ==== LXC Containers =============
    pve_lxd_containers:
      hosts:
      # == Organised by function ======
        # Each function has different IP blocks

        # === Core (10-29) ============
        # Internal-only DNS
        dns-01:
          vmid: 111
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          uses_docker: false
          memory: 512
          roles:
            - setup-dnsmasq

        dns-02:
          vmid: 116
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          uses_docker: false
          memory: 512
          roles:
            - setup-dnsmasq

        prox-01:
          vmid: 115
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 1024
          custom_networks:
            net1: "name=eth1,ip=10.0.101.3/24,bridge=vmbr101,gw=10.0.101.1"
          roles:
            - setup-proxy-traefik

        auth-01:
          vmid: 112
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 2048
          roles:
            - setup-auth

        # auth-02:
        #   vmid: 117
        #   node: '{{ host_server }}'
        #   ostemplate: '{{ debian_template }}'
        #   memory: 1024
        #   roles:
        #     - setup-authelia

        sec-01:
          vmid: 114
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'

        gate-01:
          vmid: 113
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 512
          roles:
            - setup-cloudflared

        # =============================
        # === Utilty (30-49) ==========
        util-01:
          vmid: 130
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 2048
          roles:
          - setup-monitoring
          # - setup-cloudflare-ddns
          - setup-vikunja
          - setup-recipes

        code-01:
          vmid: 135
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 2048
          custom_networks:
            net1: "name=eth1,ip=10.0.101.3/24,bridge=vmbr101,gw=10.0.101.1"
          roles:
          - setup-coder

        stor-01:
          vmid: 140
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 2048
          custom_mounts:
            mp1: 
              container_path: "/data"
              host_path: "{{ hostvars[ host_server ].storage_directory }}"
          roles:
          - setup-storage

        home-01:
          vmid: 141
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          memory: 1024
          custom_mounts:
            mp1: 
              container_path: "{{ hostvars[ host_server].zigbee_adapter | default() }}"
              host_path: "{{ hostvars[ host_server].zigbee_adapter | default() }}"
          custom_networks:
            net1: "name=eth1,ip=192.168.200.2/24,bridge=vmbr2,gw=192.168.200.1"
          roles:
          - setup-home

        # =============================
        # === Media (50-59) ===========
        media-01:
          vmid: 150
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          media_directory: "/data"
          memory: 4096
          uses_docker: false
          custom_mounts:
            mp1: 
              container_path: "/data"
              host_path: "{{ hostvars[ host_server ].media_directory }}"
          roles:
            - setup-jellyfin

        media-02:
          vmid: 151
          node: '{{ host_server }}'
          ostemplate: '{{ debian_template }}'
          media_directory: "/data"
          memory: 4096
          custom_mounts:
            mp1: 
              container_path: "/data"
              host_path: "{{ hostvars[ host_server ].media_directory }}"
          roles:
            - setup-media-dl
            - setup-torrent
            - setup-library

    proxy:
      hosts:
        prox-01:
          # proxy_dev_mode: true
          traefikServices:
            # Core
            - name: authentik
              host: 'auth.{{ project_tld }}'
              destScheme: https
              destHost: auth-01
              destPort: '9443'
              proxyAuth: false
            
            - name: wireguard
              host: 'wgui.{{ project_tld }}'
              destScheme: http
              destHost: gate-01
              destPort: '51821'

            # Util
            - name: grafana
              host: 'monitor.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '3000'
              proxyAuth: false
              # autheliaAuth: one_factor

            - name: influxdb
              host: 'influxdb.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '8086'
              # autheliaAuth: one_factor

            - name: coder
              host: 'code.{{ project_tld }}'
              destScheme: http
              destHost: code-01
              destPort: '7080'
              proxyAuth: false

            - name: nextcloud
              host: 'storage.{{ project_tld }}'
              destScheme: https
              destHost: 'stor-01'
              destPort: '443'
              proxyAuth: false

            - name: vikunja-api
              rule: 'Host(`vikunja.{{ project_tld }}`) && (PathPrefix(`/api/v1`) || PathPrefix(`/dav/`) || PathPrefix(`/.well-known/`))'
              destScheme: http
              destHost: util-01
              destPort: '3456'
              proxyAuth: false

            - name: vikunja-frontend
              host: 'vikunja.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '3457'
              proxyAuth: false

            - name: gotify
              host: 'gotify.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '3300'
              proxyAuth: false

            - name: tandoor
              host: 'recipes.{{ project_tld }}'
              destScheme: http
              destHost: util-01
              destPort: '4001'
              proxyAuth: false

            # Media
            - name: jellyfin
              host: 'media.{{ project_tld }}'
              destScheme: http
              destHost: media-01
              destPort: '8096'
              proxyAuth: false

            # TODO: Add more to authentik
            - name: jellyseer
              host: 'jellyseer.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '5055'
              proxyAuth: false

            - name: sonarr
              host: 'sonarr.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '8989'

            - name: radarr
              host: 'radarr.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '7878'

            - name: qbittorrent
              host: 'torrent.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '8080'

            - name: prowlarr
              host: 'prowlarr.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '9696'

            - name: calibre-web
              host: 'library.{{ project_tld }}'
              destScheme: http
              destHost: media-02
              destPort: '8083'
              proxyAuth: false

            # Home Assistant
            - name: home-assistant
              host: 'home.{{ project_tld }}'
              destScheme: http
              destHost: home-01
              destPort: '8743'
              proxyAuth: false

            - name: esp-home
              host: 'esp.{{ project_tld }}'
              destScheme: http
              destHost: home-01
              destPort: '6052'

    # =============================
    # === Meta-groups =============
    media:
      hosts:
        media-01:
        media-02:
    utility:
      hosts:
        util-01:
        home-01:
        code-01:
        stor-01:
    core:
      hosts:
        dns-02:
        prox-01:
        auth-01:
        sec-01:
        gate-01: