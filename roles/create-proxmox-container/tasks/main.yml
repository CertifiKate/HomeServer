- name: Add LXCs
  throttle: 1
  community.general.proxmox:
    vmid: '{{ vmid }}'
    node: '{{ node }}'
    api_user: '{{ vault_pve_api_user }}'
    api_password: '{{ vault_pve_api_password }}'
    api_host: '{{ hostvars[node].ansible_host }}'
    password: '{{ password | default(omit) }}'
    hostname: '{{ inventory_hostname + ("-dev" if node in groups["dev"] else "") }}'
    ostemplate: 'local:vztmpl/{{ lxc_templates[os_type] }}'
    storage: 'local-lvm2'
    cores: '{{ cores | default(1) }}'
    memory: '{{ memory | default(512) }}'
    swap: '{{ swap | default(512) }}'
    onboot: '{{ onboot | default(true) }}'
    pubkey: '{{ pve_ansible_pubkey }}'
    unprivileged: '{{ pve_unprivileged | default(true) }}'
    pool: "apps"
    netif:
      net0: name=eth0,ip=dhcp,bridge=vmbr1,tag=10
    features:
    - nesting=1
  register: added_lxc
  

- name: Setup nixos
  when: os_type == 'nix'
  block:
  # - name: Run initial nix configuration from bare install - no python
  #   block:

  #   # - name: Determine if Python installed
  #   #   raw: python -V
  #   #   register: pythonInstalled
  #   #   failed_when: false
  #   #   ignore_errors: true
  #   #   changed_when: false
  #   #   when: sshReachable.failed is false or sshReachable.unreachable is defined and sshReachable.unreachable

  #   - set_fact:
  #       needsPython: "{{ sshReachable.failed }}"
      # or sshReachable.unreachable or pythonInstalled.rc not in [0] }}"

    # - name: Setup basic Nix config without python
    #   delegate_to: "{{ node }}"
    #   become: true
    #   when: needsPython
    #   block:

#       - name: Copy Nix config to node
#         template:
#           src: "{{ nix_shared_config_dir }}"
#           dest: "/tmp/{{ vmid }}-configuration.nix"
#         register: nixConfigChanged
#         vars: 
#           skipServiceInit: true

#       - name: Push config to Nix
#         command:
#           cmd: "pct push {{ vmid }} /tmp/{{ vmid }}-configuration.nix /etc/nixos/configuration.nix"

  - name: Update nix-channel
    become: true
    connection: ssh
    vars:
      ansible_python_interpreter: "/run/current-system/sw/bin/python3"
    command:
      cmd: nix-channel --update
      # cmd: pct enter {{ vmid  }}
      # stdin:
      #   source /etc/set-environment;
      #   nix-channel --update;
      #   exit;

  - name: Restart Nix container
    delegate_to: localhost
    connection: local
    become: false
    community.general.proxmox:
      vmid: "{{ vmid }}"
      api_user: '{{ vault_pve_api_user }}'
      api_password: '{{ vault_pve_api_password }}'
      api_host: '{{ hostvars[node].ansible_host }}'
      state: restarted

  - name: Wait for Nix to come back up
    pause:
      seconds: 15

- name: Proxmox Host configuration for LXC
  delegate_to: "{{ node }}"
  connection: ssh
  become: true
  block:
    - name: Ensure bind mount directories exist
      file:
        path: "{{ item.value.host_path }}"
        state: directory
        owner: '100000'
        group: '100000'
      loop: "{{ lxc_mounts | dict2items }}"
      loop_control:
        label: "{{ item.value.host_path | default(omit) }}"
      ignore_errors: true

    - name: Add mount points
      command:
        #     pct set 150        --mp1            /mnt/disk1/Media          ,mp=/data/
        cmd: "pct set {{ vmid }} --{{ item.key }} {{ item.value.host_path }},mp={{ item.value.container_path }}"
      register: mpResponse
      changed_when: mpResponse.rc not in [0]
      failed_when: mpResponse.rc not in [0,1]
      loop: "{{ lxc_mounts | dict2items }}"
      loop_control:
        label: "{{ item.value.host_path }} -> {{ item.value.container_path }}"
      ignore_errors: true

- name: Start containers
  block:
    - name: Start LXC
      community.general.proxmox:
        vmid: '{{ vmid }}'
        api_user: '{{ vault_pve_api_user }}'
        api_password: '{{ vault_pve_api_password }}'
        api_host: '{{ hostvars[node].ansible_host }}'
        state: started
      register: startLxcTask

    - name: Pause for 10s to let LXC start
      wait_for:
        host: '{{ ansible_host }}'
        port: 22
        timeout: 10
      when: startLxcTask.changed