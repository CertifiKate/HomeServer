http:
  middlewares:
    customErrorPages:
      errors:
        status:
          - "400-599"
        service: service-error-pages
        query: "/{status}.html"
    authentikProxyAuth:
      forwardAuth:
        address: https://{{ hostvars["auth-01"].ansible_host }}:9443/outpost.goauthentik.io/auth/traefik
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version
        tls:
          insecureSkipVerify: true
  routers:
    # Authentik endpoint to handle proxy forward-auth
    router-auth:
      rule: PathPrefix(`/outpost.goauthentik.io/`)
      priority: 50
      entryPoints: webHttps
      service: service-authentik
      middlewares:
        - customErrorPages
      tls:
        certResolver: letsEncrypt
        domains:
          - main: "{{ project_tld }}"
            sans:
              - "*.{{ project_tld }}"

    router-error-pages:
      rule: HostRegexp(`{host:.+}`)
      # Should be a lower priority than all other routers
      priority: 5
      entryPoints: webHttps
      middlewares:
        - customErrorPages
      service: service-error-pages
      tls:
        certResolver: letsEncrypt
        domains:
          - main: "{{ project_tld }}"
            sans:
              - "*.{{ project_tld }}"

    # Special route for the traefik dashboard
    traefik:
      rule: Host(`traefik.{{ project_tld }}`)
      priority: 10
      entryPoints: webHttps
      service: api@internal
      middlewares:
        - authentikProxyAuth
        - customErrorPages
      tls:
        certResolver: letsEncrypt
        domains:
          - main: "{{ project_tld }}"
            sans:
              - "*.{{ project_tld }}"

{% for service in traefikServices %}
    router-{{ service.name }}:
      service: service-{{ service.name }}
{% if service.rule is defined %}
      rule: "{{ service.rule }}"
{% else %}
      rule: "Host(`{{service.host}}`)"
{% endif%}
      entryPoints: webHttps
      priority: {{ service.priority | default(10) }}
      middlewares:
        - customErrorPages
{%  if service.proxyAuth is undefined or service.proxyAuth %}
        - authentikProxyAuth
{%  endif%}
      tls:
        certResolver: letsEncrypt
        domains:
          - main: "{{ project_tld }}"
            sans:
              - "*.{{ project_tld }}"

{% endfor %}

  # Add the service
  services:
    service-error-pages:
      loadBalancer:
        servers:
          - url: "http://http-error-pages:8080"
{% for service in traefikServices %}
    # =================================
    # {{ service.name }} 
    service-{{ service.name }}:
      loadBalancer:
        servers:
          - url: "{{ service.destScheme }}://{{ hostvars[service.destHost].ansible_host }}:{{service.destPort}}"
    # =================================

{% endfor %}
