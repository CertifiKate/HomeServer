- name: Setup Nix
  become: true
  vars:
    ansible_python_interpreter: "/run/current-system/sw/bin/python3"
  block:
    - name: Add SOPS Age key (For runtime secrets)
      copy:
        content: "{{ vault_nix_age[inventory_hostname] }}"
        dest: "/etc/sops-age.txt"
        mode: 0500
        owner: root
        group: root

    - name: Add deploy key (for unattended SSH pulling private secrets repo)
      copy:
        content: "{{ vault_nix_deploy_key }}"
        dest: "/root/.ssh/id_ed25519"
        mode: 0500
        owner: root
        group: root

    - name: Get latest version of the flake
      become: true
      git:
        force: true
        dest: /etc/nixos/
        repo: "{{ repo }}"
      vars:
        repo: https://github.com/CertifiKate/nix-dotfiles.git

    # - name: Get latest version of the flake
    #   become: true
    #   command:
    #     chdir: /etc/nixos/
    #     cmd: "nix-shell -p git --command 'git clone {{ repo }} /etc/nixos'"
    #   vars:
    #     repo: https://github.com/CertifiKate/nix-dotfiles.git
    #   when: files.matched == 0


    - name: Run nixos-rebuild
      become: true
      command:
        chdir: /etc/nixos
        cmd: nixos-rebuild switch --flake .#{{ inventory_hostname }}

# - name: Setup Nix
#   become: true
#   vars:
#     ansible_python_interpreter: "/run/current-system/sw/bin/python3"
#   block:

#   - name: Copy Nix config
#     template:
#       src: "{{ nix_shared_config_dir }}"
#       dest: "/etc/nixos/configuration.nix"
#     register: nixConfigChanged

#   # Add config files
#   - name: Add config
#     template:
#       src: ./files/{{ item }}.nix.j2
#       dest: /etc/nixos/{{ item }}.nix
#     vars:
#       base_dir: "{{ project_directory }}/{{ item }}"
#       config_dir: "{{ base_dir }}/config"
#       data_dir: "{{ base_dir }}/data"
#     with_items:
#       - "{{ nix_configs }}"
#     when: nix_configs is defined
#     register: nixIncludeFilesChanged

#   - name: Add static files
#     copy:
#       src: "{{ item.src }}"
#       dest: "{{ item.dest }}"
#     with_items:
#       - src: "{{ figlet_font_dir }}"
#         dest: "/etc/nixos/figlet-font.flf"
#     register: nixStaticFilesChanged

#   - name: Rerun config
#     command:
#       cmd: "nixos-rebuild switch"
#     when: nixConfigChanged.changed or nixIncludeFilesChanged.changed or nixStaticFilesChanged.changed